/***********************************
* EECS2031 - Lab 4		   
* Filename: lab4b.c		  	
* Author: Last name, first name	    
* Email: Your preferred email address	 	
* Login ID: Your login ID    		
************************************/

#include <stdio.h>

#define MAX_SIZE 100

float convertArrayToFloat(char s[]);
double toPower(int a, int b);

main() {

   char my_strg[MAX_SIZE];
   double my_number = 0.0;
   

   /********** Add your code below this line **********/
   int c, position;
   
   putchar('\n');
   position = 0;
   
   while (((c = getchar()) != EOF) && (c != '\n'))
   {
   	   my_strg[position] = c;
   	   position = position + 1;
   }
   my_strg[position] = '\0';
   
   
   /*
   my_number = -265.00;
   printf("Before: %f\n", my_number);
   
   my_number = -my_number;
   printf("After: %f\n", my_number);
   */

   /********** Add your code above this line **********/
   

   printf( "%.6f\n", my_number );
}

//How about negative numbers?
float convertArrayToFloat(char s[], int arrayLength)
{
	int negativeAtFirstSight, postDecimal, decimalPos, numberBolder, powerOf, digitHolder = 0;
	int i;
	
	for (i = 0; i < arrayLength; i = i + 1)
	{
		if (s[i] == '-' && i == 0)
		{
			negativeAtFirstSight = 1;
			continue;
		}
		
		if(s[i] == '.')
		{
			postDecimal = 1;
			decimalPos = i;
			continue;
		}
		
		//powerOf = (negativeAtFirstSight == 1)

		numberHolder = s[i] - '0';
		digitHolder = (postDecimal == 1) ? toPower(numberHolder, decimalPos - i) : toPower(numberHolder, arrayLength - 1 - i);
		
		
		
		
	}
	
	
	
	
	
	
	return 0;
}

double toPower(int a, int b)
{
	if (b == 0)
	{
		return 1;
	}
	else if (b < 0)
	{
		return ((double) 1 / (double) a) * toPower(a, b + 1);
	}
	else
	{
		return (double) a * toPower(a, b - 1);
	}
}
